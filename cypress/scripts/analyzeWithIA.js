// Importa o m√≥dulo 'node-fetch' para fazer requisi√ß√µes HTTP (necess√°rio no Node.js)
import fetch from 'node-fetch';

// Importa o m√≥dulo 'dotenv' para ler vari√°veis de ambiente definidas em um arquivo .env
import * as dotenv from 'dotenv';

// Carrega as vari√°veis de ambiente do arquivo .env para o processo atual (Node.js)
dotenv.config();

// Fun√ß√£o principal exportada: recebe o texto do erro e o t√≠tulo do teste como argumentos
export async function analyzeErrorWithIA(errorText, testTitle) {
  // L√™ as vari√°veis de ambiente definidas no reposit√≥rio ou no arquivo .env
  const API_KEY = process.env.IA_API_KEY;
  const API_URL = process.env.IA_API_URL;
  const MODEL = process.env.IA_MODEL;

  // Valida√ß√£o de seguran√ßa: garante que todas as vari√°veis estejam configuradas
  if (!API_KEY || !API_URL || !MODEL) {
    console.warn("‚ö†Ô∏è Vari√°veis de ambiente da IA n√£o configuradas corretamente.");
    return "Erro ao se comunicar com a IA: Vari√°veis de ambiente n√£o definidas";
  }

  try {
    // Realiza a chamada HTTP POST para o endpoint da IA
    const response = await fetch(API_URL, {
      method: "POST", // M√©todo HTTP usado
      headers: {
        'Authorization': `Bearer ${API_KEY}`, // Envia o token de autentica√ß√£o no header
        'Content-Type': 'application/json'     // Define o formato da requisi√ß√£o como JSON
      },
      body: JSON.stringify({
        // Par√¢metros da requisi√ß√£o que ser√£o enviados √† IA
        model: MODEL, // Modelo de IA a ser utilizado (ex: openai/gpt-4, anthropic/claude-3-haiku)

        // Mensagens no formato esperado pela API (estilo OpenAI)
        messages: [
          {
            role: "system", // Define o "papel" da IA para responder com o tom adequado
            content: "Voc√™ √© um analista de QA s√™nior. Responda com markdown, usando estrutura clara e emojis para exibi√ß√£o em relat√≥rios Allure."
          },
          {
            role: "user", // Mensagem do usu√°rio com o contexto real do erro
            content: `
### üß† An√°lise t√©cnica do erro de teste

**T√≠tulo do teste:** ${testTitle}

**Erro encontrado:**
\`\`\`
${errorText}
\`\`\`

Por favor, explique de forma t√©cnica o que pode ter causado esse erro, liste poss√≠veis causas numeradas e sugest√µes de corre√ß√£o em uma se√ß√£o separada.
`
          }
        ]
      })
    });

    // Espera a resposta da API e converte para JSON
    const data = await response.json();

    // Verifica se a resposta veio corretamente no formato esperado
    if (data?.choices?.[0]?.message?.content) {
      // Retorna o conte√∫do da resposta, j√° formatado em markdown para o Allure
      return data.choices[0].message.content.trim();
    }

    // Caso a IA responda com um formato inesperado
    return "‚ùå Erro: resposta inesperada da IA.";
  } catch (err) {
    // Captura erros de rede, timeout ou falhas na chamada
    console.error("‚ùå Erro ao chamar IA:", err.message);
    return "Erro inesperado ao tentar se comunicar com a IA.";
  }
}
